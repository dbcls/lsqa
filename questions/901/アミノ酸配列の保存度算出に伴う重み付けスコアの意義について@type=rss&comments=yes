<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Answers to: アミノ酸配列の保存度算出に伴う重み付けスコアの意義について</title><link>http://qa.lifesciencedb.jp/questions/901/%E3%82%A2%E3%83%9F%E3%83%8E%E9%85%B8%E9%85%8D%E5%88%97%E3%81%AE%E4%BF%9D%E5%AD%98%E5%BA%A6%E7%AE%97%E5%87%BA%E3%81%AB%E4%BC%B4%E3%81%86%E9%87%8D%E3%81%BF%E4%BB%98%E3%81%91%E3%82%B9%E3%82%B3%E3%82%A2%E3%81%AE%E6%84%8F%E7%BE%A9%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6</link><description>&lt;p&gt;はじめまして、初めて使用させていただきます。よろしくお願いします。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1,疑問点&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;・以下の論文でValder氏の提唱している式(37式)を学びましたが、その式中でHenikoff氏の考案した重み付けがなぜ使用されているのかわからない。
(参照:https://www.ncbi.nlm.nih.gov/pubmed/12112692)&lt;/p&gt;
&lt;p&gt;疑問を持った理由&lt;/p&gt;
&lt;p&gt;→例えば、100本のマルチプルアラインメントされた相同配列のうち、99本が90%程度の一致度を示し、残りの1本が20%程度の一致度を示しているような場合を考える。
重み付けの計算式によれば、20%の一致度を示す配列の情報を保存度に大きな影響として与えようとしていることがわかる。なぜ、このような計算方法をとる必要があるのか？99本の保存されていると考えられるサイトを以って、全ての配列は90%程度保存されていると判断してはいけないのはなぜか？と考えたため。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;---論文を読み込めない方のために、使用している式について以下に画像をキャプチャしました---&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;1,Valder氏の保存度算出式(https://gyazo.com/8285e51d7bd7db8d8057bb376e9e454f)&lt;/p&gt;
&lt;p&gt;2,重み付けの計算方法(https://gyazo.com/7907a5beddc2a1ee6348e310f9a5d78b)&lt;/p&gt;
&lt;p&gt;※iは配列の数を表し、Nは配列の総数を表している。xはポジションのことを表している。&lt;/p&gt;
&lt;p&gt;→お分かりになる方がいるだろうという希望的観測のもと質問をいたしますので、計算方法の詳細については記述いたしません。必要な場合は追記いたしますので、おしらせください。&lt;/p&gt;
&lt;p&gt;3,スコア行列から取得したアミノ酸ペアの値に対する計算(https://gyazo.com/60242cf27db66929a5490dc0ed9b1558)&lt;/p&gt;
&lt;p&gt;4,スコア行列=Blosum62(https://gyazo.com/7c8c0bb28db10ba26d07bdf6e40aed57)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2,私の理解度について&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Valder氏の式については、"加重平均"を計算していることは理解しております。配列ごとに重み付けをした値を分母と分子にとり、
分子についてはBlosum62のスコア行列から得られた値を配列同士の重み付けの積と、さらに積をとって計算しています。
分子、分母共に、各項が1を超えることは絶対にないように計算されているので、保存度は0~1の間で算出される。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3,疑問点解決のために模索したこと&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;・Henikoff氏の重み付けを使用する理由は、「taxonomic bias」を逃れるために導入していることを以下の参考文献から学びましたが、このバイアスについて具体例を元に詳しく説明されている文献等々を見つけることができず、具体的に記している文献を知りたいです。
(参考文献:タンパク質機能解析のためのバイオインフォマティクス P.67)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4,求めている回答&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;・taxonomic biasを理解することが、重み付けを式に組み込む理由として正しいのか？&lt;/p&gt;
&lt;p&gt;→妥当である場合、taxonomic biasが発生してしまうような場合を、具体例を含んで解説している書籍、論文をご紹介いただきたいです。&lt;/p&gt;
&lt;p&gt;→妥当でない場合、何を理解することで重み付けをする理由を説明することができるかをご指南いただきたいです。&lt;/p&gt;</description><atom:link href="http://qa.lifesciencedb.jp/questions/901/%E3%82%A2%E3%83%9F%E3%83%8E%E9%85%B8%E9%85%8D%E5%88%97%E3%81%AE%E4%BF%9D%E5%AD%98%E5%BA%A6%E7%AE%97%E5%87%BA%E3%81%AB%E4%BC%B4%E3%81%86%E9%87%8D%E3%81%BF%E4%BB%98%E3%81%91%E3%82%B9%E3%82%B3%E3%82%A2%E3%81%AE%E6%84%8F%E7%BE%A9%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6" rel="self"></atom:link><language>ja</language><lastBuildDate>Mon, 30 Sep 2019 01:28:07 +0900</lastBuildDate><item><title>Answer by study_bioinfo</title><link>http://qa.lifesciencedb.jp/questions/901/%E3%82%A2%E3%83%9F%E3%83%8E%E9%85%B8%E9%85%8D%E5%88%97%E3%81%AE%E4%BF%9D%E5%AD%98%E5%BA%A6%E7%AE%97%E5%87%BA%E3%81%AB%E4%BC%B4%E3%81%86%E9%87%8D%E3%81%BF%E4%BB%98%E3%81%91%E3%82%B9%E3%82%B3%E3%82%A2%E3%81%AE%E6%84%8F%E7%BE%A9%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/903</link><description>&lt;p&gt;ご回答ありがとうございます。
返信に時間がかかってしまい大変申し訳ありませんでした。
重み付けについて、特に「なぜ相対的に近縁な配列を低く評価するべきなのか」について理解することができました。つまり、なぜtaxonomic biasを考慮するべきなのかについてはよくわかりました。&lt;/p&gt;
&lt;h2&gt;しかし、「taxonomic biasとは何か？」という部分についてはあまり理解ができていません。&lt;/h2&gt;
&lt;p&gt;直訳すれば、「分類的偏見」なのはわかりますが、、、&lt;/p&gt;
&lt;p&gt;この偏見というのは、「90%一致している99本の配列と、20%の一致度しか示さない1本の配列では、1本の配列よりも99本の配列が保存されていると考える」という私の当初の考え方と同じなのでしょうか？&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">study_bioinfo</dc:creator><pubDate>Mon, 30 Sep 2019 01:28:07 +0900</pubDate><guid>http://qa.lifesciencedb.jp/questions/901/%E3%82%A2%E3%83%9F%E3%83%8E%E9%85%B8%E9%85%8D%E5%88%97%E3%81%AE%E4%BF%9D%E5%AD%98%E5%BA%A6%E7%AE%97%E5%87%BA%E3%81%AB%E4%BC%B4%E3%81%86%E9%87%8D%E3%81%BF%E4%BB%98%E3%81%91%E3%82%B9%E3%82%B3%E3%82%A2%E3%81%AE%E6%84%8F%E7%BE%A9%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/903</guid></item><item><title>Answer by windowmoon</title><link>http://qa.lifesciencedb.jp/questions/901/%E3%82%A2%E3%83%9F%E3%83%8E%E9%85%B8%E9%85%8D%E5%88%97%E3%81%AE%E4%BF%9D%E5%AD%98%E5%BA%A6%E7%AE%97%E5%87%BA%E3%81%AB%E4%BC%B4%E3%81%86%E9%87%8D%E3%81%BF%E4%BB%98%E3%81%91%E3%82%B9%E3%82%B3%E3%82%A2%E3%81%AE%E6%84%8F%E7%BE%A9%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/902</link><description>&lt;p&gt;極端な例を考えてみましょう。
99本は100%保存されている場合を想像してください。
その99本が、全て同種または近縁種で、それ故に配列が完全一致しています。
1本だけ、遠縁な種の配列がデータに含まれており、それは20%しか一致しなかったとします(実際にはそんなに遠いとアライメントも不能なので相同配列であると気付くことも困難ですが、それは今回の話には関係ないので置いておきます)。
こんなデータ、事実上2本の配列で保存性を評価しているのと同じじゃないですか。
99本は近縁で完全一致しているのですから、そんな近縁種ばかりから配列をいくらサンプリングしてきても、1本しかないのも同然です。
だから、そんな配列は相対的に軽く評価し、そうじゃない配列は相対的に重く評価すべきでしょう。
100%一致が90%一致に変わっても、20%一致に比べれば近縁なのは間違いありませんから、程度が違うだけです。&lt;/p&gt;
&lt;p&gt;別の見方をしてみましょう。
アミノ酸配列の持ち主の生物または遺伝子間には、系統関係があり、系統樹が描けるはずです。
アミノ酸配列の変異は、その系統樹上で起きたイベントです。
近縁な配列間では、系統樹上の経路長(枝の長さの和)は相対的に短いです。遠縁な配列間では、経路長が長くなります。
したがって、近縁な配列群は系統樹上のごく一部の情報しか持っていないと考えられますが、遠縁な配列は系統樹上の長い経路上の情報を大量に提供してくれると考えられます。であれば、近い配列群は相対的に軽く評価すべきでしょう。&lt;/p&gt;
&lt;p&gt;実際に保存配列A,B,C…Xがどれくらいの分類群で保存されているかINSDをBLAST検索して比較する場合を考えましょう。
単純に「ヒット件数」を使った場合、INSDには哺乳類、その中でもヒトの配列が非常に多いので、ヒトが保有している保存配列で件数が多くなるのは当然ですよね。
それで、「どれくらいの分類群で保存されているか」を正しく評価できるでしょうか。
より正しく評価するには、90%くらいの一致度でヒット配列をまとめて減らした件数だとか、ヒットした配列間の系統樹の枝長の総和を使った方がいいでしょう。&lt;/p&gt;
&lt;p&gt;Taxonomic bias (Taxon sampling bias)を考慮すべきなのは以上のような理由によります。&lt;/p&gt;
&lt;p&gt;さて、長々と説明しましたが、BLOSUM62のスコア行列はTaxonomic biasとは全く関係ありません。
このスコア行列は、アミノ酸置換には起きやすい置換と起きづらい置換があるので、それをデータベースから推定して作成されたものです。
同じ1回の置換でも、滅多に起きないアミノ酸置換と非常によく起きるアミノ酸置換では、前者の方がより大きな変異として扱うべきでしょう。
そのためにこのスコア行列が使用されます。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">windowmoon</dc:creator><pubDate>Fri, 20 Sep 2019 03:47:16 +0900</pubDate><guid>http://qa.lifesciencedb.jp/questions/901/%E3%82%A2%E3%83%9F%E3%83%8E%E9%85%B8%E9%85%8D%E5%88%97%E3%81%AE%E4%BF%9D%E5%AD%98%E5%BA%A6%E7%AE%97%E5%87%BA%E3%81%AB%E4%BC%B4%E3%81%86%E9%87%8D%E3%81%BF%E4%BB%98%E3%81%91%E3%82%B9%E3%82%B3%E3%82%A2%E3%81%AE%E6%84%8F%E7%BE%A9%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/902</guid></item></channel></rss>